// <auto-generated />
using System;
using A91WEBAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace A91WEBAPI.Migrations
{
    [DbContext(typeof(APIDataContext))]
    [Migration("20200622133101_2ndmigration")]
    partial class _2ndmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("A91WEBAPI.Models.ATC1", b =>
                {
                    b.Property<int>("AbsEntry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Line")
                        .HasColumnType("int");

                    b.Property<string>("trgtPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AbsEntry");

                    b.ToTable("ATC1");
                });

            modelBuilder.Entity("A91WEBAPI.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("A91WEBAPI.Models.CRD1", b =>
                {
                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTRegnNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GSTType")
                        .HasColumnType("int");

                    b.Property<int>("LineNum")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardCode");

                    b.ToTable("CRD1");
                });

            modelBuilder.Entity("A91WEBAPI.Models.CRD7", b =>
                {
                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddrType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId0")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardCode");

                    b.ToTable("CRD7");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCLA", b =>
                {
                    b.Property<int>("statusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusID");

                    b.ToTable("OCLA");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCLG", b =>
                {
                    b.Property<int>("ClgCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActType")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("AssignedBy")
                        .HasColumnType("smallint");

                    b.Property<int?>("AtcEntry")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AttendEmpl")
                        .HasColumnType("int");

                    b.Property<int?>("AttendReci")
                        .HasColumnType("int");

                    b.Property<short?>("AttendUser")
                        .HasColumnType("smallint");

                    b.Property<int?>("BeginTime")
                        .HasColumnType("int");

                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Closed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CntctDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("CntctSbjct")
                        .HasColumnType("smallint");

                    b.Property<int>("CntctTime")
                        .HasColumnType("int");

                    b.Property<short>("CntctType")
                        .HasColumnType("smallint");

                    b.Property<string>("ContactPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DPPStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DayInMonth")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocEntry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ENDTime")
                        .HasColumnType("int");

                    b.Property<string>("EncryptIV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIPROJECT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Instance")
                        .HasColumnType("smallint");

                    b.Property<int?>("Interval")
                        .HasColumnType("int");

                    b.Property<string>("IsRemoved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaborItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastRemind")
                        .HasColumnType("datetime2");

                    b.Property<short>("Location")
                        .HasColumnType("smallint");

                    b.Property<int?>("LogInstanc")
                        .HasColumnType("int");

                    b.Property<int?>("MaxOccur")
                        .HasColumnType("int");

                    b.Property<string>("Monday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("NextTime")
                        .HasColumnType("smallint");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OprId")
                        .HasColumnType("int");

                    b.Property<short>("OprLine")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("OrigDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerCode")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Recontact")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecurPat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RemDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RemQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RemSented")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("RemTime")
                        .HasColumnType("smallint");

                    b.Property<string>("RemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saturday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SeEndDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SeStartDat")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SeriesNum")
                        .HasColumnType("int");

                    b.Property<int?>("SlpCode")
                        .HasColumnType("int");

                    b.Property<string>("SubOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sunday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thursday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transfered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tuesday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_OpenTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("UserSign")
                        .HasColumnType("smallint");

                    b.Property<short?>("UserSign2")
                        .HasColumnType("smallint");

                    b.Property<string>("Wednesday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Week")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("inactive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("parentId")
                        .HasColumnType("int");

                    b.Property<string>("parentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("prevActvty")
                        .HasColumnType("int");

                    b.Property<string>("room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tentative")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClgCode");

                    b.ToTable("OCLG");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCLS", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<short>("UserSign")
                        .HasColumnType("smallint");

                    b.HasKey("Code");

                    b.ToTable("OCLS");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCPR", b =>
                {
                    b.Property<int>("CntctCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellolar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_MailL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CntctCode");

                    b.ToTable("OCPR");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCRD", b =>
                {
                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CntctPrsn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Free_Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("GroupCode")
                        .HasColumnType("smallint");

                    b.Property<string>("IntrntSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToDef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frozenFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("validFor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardCode");

                    b.ToTable("OCRD");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCRN", b =>
                {
                    b.Property<string>("CurrCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrCode");

                    b.ToTable("OCRN");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCRY", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("OCRY");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OCST", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("OCST");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OSS_MIS_Monthly", b =>
                {
                    b.Property<int>("FY_Year")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("Card_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GL_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FY_Year", "Period", "Card_Code", "GL_Code");

                    b.ToTable("OSS_MIS_Monthly");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OSS_MIS_Quaterly", b =>
                {
                    b.Property<int>("FY_Year")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("Card_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GL_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FY_Year", "Period", "Card_Code", "GL_Code");

                    b.ToTable("OSS_MIS_Quaterly");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OSS_MIS_Yearly", b =>
                {
                    b.Property<int>("FY_Year")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("Card_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GL_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FY_Year", "Period", "Card_Code", "GL_Code");

                    b.ToTable("OSS_MIS_Yearly");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OSS_ROLES_AUTH", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Component")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("@OSS_ROLES_AUTH");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OSS_VotingResults", b =>
                {
                    b.Property<int>("VotingID")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTS")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDateTS")
                        .HasColumnType("datetime2");

                    b.Property<string>("postdiscussioncommnets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postdiscussionrate")
                        .HasColumnType("int");

                    b.Property<string>("prediscussionncommnets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("prediscussionrate")
                        .HasColumnType("int");

                    b.HasKey("VotingID", "UserId");

                    b.HasAlternateKey("UserId", "VotingID");

                    b.ToTable("OSS_VotingResults");
                });

            modelBuilder.Entity("A91WEBAPI.Models.OUSR", b =>
                {
                    b.Property<short>("USERID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("U_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USERID");

                    b.ToTable("OUSR");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("A91WEBAPI.Models.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("A91WEBAPI.Models.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A91WEBAPI.Models.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("A91WEBAPI.Models.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
